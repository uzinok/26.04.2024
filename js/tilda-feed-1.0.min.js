window.t_feeds_endpoint = "feeds.tildacdn.com";
try {
	var rootzoneapi = document.getElementById("allrecords").getAttribute("data-tilda-root-zone");
	rootzoneapi && (window.t_feeds_endpoint = "feeds.tildaapi." + rootzoneapi)
} catch (e) {}

function t_feed_init(e, t) {
	document.querySelectorAll("#rec" + e).length > 1 && window.location.pathname.indexOf("tpost") > -1 && alert("Error: 2 identical feeds blocks on the page. Remove a duplicate. Blocks can be on the Header or Footer page."), window.tFeedPosts = {}, t_feed_createObjWithPosts();
	var o = document.querySelector("#rec" + e);
	if (o) {
		var r = document.querySelector("#allrecords"),
			a = o.querySelector(".js-feed");
		if (a) {
			var s = o.querySelector(".js-feed-preloader"),
				d = a.getAttribute("data-feed-grid-type"),
				i = r.getAttribute("data-tilda-mode");
			if (t.isPublishedPage = "edit" !== i && "preview" !== i, t.btnText && t.amountOfPosts || t.btnAllPosts.text)
				if ("side-panel" === d) o.querySelector(".t-feed__feed-wrapper").insertAdjacentHTML("beforeend", t_feed_drawBtnsContainer(t));
				else a.insertAdjacentHTML("beforeend", t_feed_drawBtnsContainer(t));
			"y" !== window.lazy && "yes" !== r.getAttribute("data-tilda-lazy") || t_feed_onFuncLoad("t_lazyload_update", (function () {
				t_lazyload_update()
			})), setTimeout((function () {
				s && s.classList.remove("t-feed__post-preloader__container_hidden")
			}), 1500), t_feed_showLoadersForPostsList(e), -1 != window.location.hash.indexOf("#!/tfeeds") ? t_feed_loadPosts(e, t, 1, !1, t_feed_loadPartPosts) : "side-panel" === d ? t_feed_loadPanelPosts(e, t) : t_feed_loadPosts(e, t, 1, !1), t_feed_showMore(e, t), "col" != a.getAttribute("data-feed-grid-type") && "slider" != a.getAttribute("data-feed-grid-type") || (window.addEventListener("resize", t_throttle((function () {
				t_feed_unifyColHeights(e, t)
			}), 200)), "function" == typeof window.jQuery ? $("#rec" + e).find(".t-feed").bind("displayChanged", (function () {
				t_feed_unifyColHeights(e, t)
			})) : o.querySelector(".t-feed").addEventListener("displayChanged", (function () {
				t_feed_unifyColHeights(e, t)
			}))), window.onpopstate = function () {
				var o = document.body;
				if (o.classList.remove("t-zoomer__show"), o.classList.remove("t-zoomer__show_fixed"), null !== window.history.state) {
					var r = window.history.state.obj,
						a = window.history.state.post;
					t_feed_workPostPopup(e, r, a, a.uid, t)
				} else o.classList.contains("t-body_popupshowed") && t_feed_closePopup(e, t, window.location.href)
			}
		}
	}
}

function t_feed_loadPartPosts(e, t, o) {
	var r = document.querySelector("#rec" + e),
		a = r.querySelectorAll(".js-feed-parts-switcher");
	if (Array.prototype.forEach.call(a, (function (e) {
			var o = decodeURI(window.location.hash).split("/"),
				a = e.getAttribute("data-feedpart-title") == o[o.length - 1],
				s = e.closest(".js-feed").getAttribute("data-feed-uid") == o[o.length - 3];
			if (a && s) {
				var d = e.getAttribute("data-feedpart-uid");
				t.feeduid = t.feeduid.split("-")[0] + "-" + d, r.querySelector(".t-active").classList.remove("t-active"), e.classList.add("t-active")
			}
		})), window.tFeedPosts[e].switcher = !0, window.tFeedPosts[e].count = 0, t_feed_loadPosts(e, t, o, !1), -1 != window.location.href.indexOf("#!/tfeeds")) {
		var s = decodeURI(window.location.hash).split("/"),
			d = s[s.length - 3];
		t_feed_scrollToFeed(document.querySelector('.js-feed[data-feed-uid="' + d + '"]'))
	}
}

function t_feed_scrollToFeed(e) {
	if (e) {
		var t = e.getBoundingClientRect().top + window.pageYOffset,
			o = t ? t - 100 : 0;
		"scrollBehavior" in document.documentElement.style ? window.scrollTo({
			top: o,
			behavior: "smooth"
		}) : window.scrollTo(0, o)
	}
}

function t_feed_createObjWithPosts() {
	var e = document.querySelectorAll(".js-feed");
	Array.prototype.forEach.call(e, (function (e) {
		var t = e.getAttribute("data-feed-recid");
		window.tFeedPosts[t] = {}, void 0 !== window.tFeedPosts[t] && (window.tFeedPosts[t].count = 0, window.tFeedPosts[t].switcher = !1)
	}))
}

function t_feed_loadPosts(e, t, o, r, a) {
	var s = document.querySelector("#rec" + e),
		d = document.querySelector(".t-records"),
		i = document.querySelector(".js-feed-btn-show-more"),
		n = !o || 1 === parseInt(o),
		l = t_feed_createDataObjForRequest(e, t, n, o),
		p = "https://" + window.t_feeds_endpoint + "/api/getfeed/";
	if (!t.isPublishedPage) {
		l.projectid = d.getAttribute("data-tilda-project-id");
		var _ = window.location.hostname.split(".");
		p = "https://" + ("tilda." + _[_.length - 1]) + "/projects/feeds/getfeed/"
	}
	i && (i.style.pointerEvents = "none", i.style.opacity = "0.7");
	var c = Date.now(),
		u = function (e, t) {
			var o = [];
			for (var r in e)
				if (Object.prototype.hasOwnProperty.call(e, r)) {
					var a = t ? t + "[" + r + "]" : r,
						s = e[r];
					"{}" !== JSON.stringify(s) && o.push(null !== s && "object" == typeof s ? u(s, a) : encodeURIComponent(a) + "=" + encodeURIComponent(s))
				} return o.join("&")
		},
		f = new XMLHttpRequest;
	f.open("GET", p + "?" + u(l), !0), f.timeout = 25e3, f.onload = function () {
		if (this.status >= 200 && this.status < 400) {
			var o = s.querySelector(".js-feed-preloader"),
				d = s.querySelector(".js-feed-container");
			if ("" === f.response) return;
			try {
				var l = JSON.parse(f.response)
			} catch (e) {
				// null !== o.parentNode && o.parentNode.removeChild(o), d.insertAdjacentHTML("beforeend", t_feed_drawErrorBox(t, f.response))
			}
			if ("object" != typeof l) return;
			"error" in JSON.parse(f.response) && setTimeout((function () {
				null !== o.parentNode && o.parentNode.removeChild(o), d.insertAdjacentHTML("beforeend", t_feed_drawErrorBox(t, JSON.parse(f.response).error))
			}), 500);
			var p = s.querySelector(".js-feed");
			if (p && p.setAttribute("data-feed-uid", l.feeduid), window.tFeedPosts[e] || (window.tFeedPosts[e] = {}), window.tFeedPosts[e].lang = l.feedlang, clearTimeout(s.getAttribute("data-preloader-timeout")), o && null !== o.parentNode && o.parentNode.removeChild(o), n && d && (d.innerHTML = ""), void 0 !== l.posts) {
				var _ = parseInt(l.slice, 10),
					c = parseInt(l.total, 10);
				if (_ < c || _ === c) t_feed_generatePosts(l, l.posts, e, t, r);
				else if (void 0 !== l.posts && 0 === l.posts.length) {
					return d.querySelector(".js-feed-error-msg") || d.insertAdjacentHTML("beforeend", t_feed_drawEmptyMessage(t, e)), d.setAttribute("data-slider-totalslides", 0), (w = document.createEvent("Event")).initEvent("feedsLoadPosts", !0, !0), void d.dispatchEvent(w)
				}
				var u = s.querySelectorAll(".js-feed-parts-switcher");
				0 !== l.posts.length && l.parts && l.parts.length > 1 && 0 === u.length && !t.hideFeedParts && t_feed_addFeedParts(e, t, l.parts, l.feeduid), d.setAttribute("data-slider-totalslides", c);
				var g = document.createEvent("Event");
				g.initEvent("feedsLoadSlide", !0, !0), d.dispatchEvent(g)
			}
			void 0 !== a && a(e, t, _, r);
			var w, v = s.querySelectorAll(".t-feed__post");
			if (Array.prototype.forEach.call(v, (function (e) {
					e.classList.remove("t-feed__post_hidden")
				})), i && (i.style.pointerEvents = "inherit", i.style.opacity = "1"), n && d.classList.contains("t-slds__items-wrapper"))(w = document.createEvent("Event")).initEvent("feedsLoadPosts", !0, !0), d.dispatchEvent(w), d.setAttribute("data-feeds-posts-loaded", "true");
			t_feed_displayButtons(e, l.nextslice, (l.posts || []).length), "slider" !== p.getAttribute("data-feed-grid-type") && (t_feed__moveClickOnPost(e), t_feed__addFocusOnTab(e));
			var m = document.querySelector("#allrecords").getAttribute("data-tilda-lazy");
			"y" !== window.lazy && "yes" !== m || t_onFuncLoad("t_lazyload_update", (function () {
				t_lazyload_update()
			}))
		}
	}, f.onerror = function (e) {
		var t = Date.now() - c;
		0 == e.status && t < 100 && 0 !== e.readyState && alert("Request error (get posts). Please check internet connection...")
	}, f.send()
}

function t_feed_loadPanelPosts(e, t) {
	var o = JSON.parse(localStorage.getItem("tFeeds"));
	o && o.isEverLoaded && setTimeout((function () {
		t_feed_loadPosts(e, t, 1, !1)
	}), 3e3)
}

function t_feed_createDataObjForRequest(e, t, o, r) {
	var a = t.amountOfPosts,
		s = Date.now(),
		d = t.dateFilter,
		i = {
			feeduid: t.feeduid,
			recid: e,
			c: s,
			size: a,
			slice: r,
			sort: {
				date: t.reverse
			},
			filters: {
				date: {}
			}
		};
	return "all" === d ? i.filters.date = "" : i.filters.date[d] = "now", r && (i.slice = r), o && (i.getparts = !0), i
}

function t_feed_displayButtons(e, t, o) {
	var r = document.querySelector("#rec" + e),
		a = r.querySelector(".t-feed__buttons-wrapper"),
		s = r.querySelector(".js-feed-btn-show-more"),
		d = r.querySelector(".js-feed-btn-show-all-posts");
	a && (a.classList.remove("t-feed__buttons-wrapper_hidden"), s && (s.style.display = void 0 === t ? "none" : "inline-block"), d && (d.style.display = 0 === o ? "none" : "inline-block"))
}

function t_feed_generatePosts(e, t, o, r, a) {
	var s = document.querySelector("#rec" + o),
		d = s.querySelector(".js-feed-container");
	if (s.querySelector(".js-feed")) {
		var i = "";
		if (void 0 !== t)
			for (var n = 0; n < t.length; n++) {
				var l = t[n];
				i += t_feed_drawWholePost(o, l, r, n), window.tFeedPosts[o].count = window.tFeedPosts[o].count + 1, window.tFeedPosts[o][l.uid] = l
			}
		var p = window.pageYOffset;
		if (d.insertAdjacentHTML("beforeend", i), window.scrollTo(window.pageXOffset, p), t_feed_initPopup(o, e, window.tFeedPosts, r), t_feed_unifyColHeights(o, r), void 0 !== document.fonts ? void 0 !== document.fonts.ready && document.fonts.ready.then((function () {
				setTimeout((function () {
					t_feed_unifyColHeights(o, r)
				}), 1e3)
			})) : setTimeout((function () {
				t_feed_unifyColHeights(o, r)
			}), 1e3), "y" !== window.lazy && "yes" !== document.querySelector("#allrecords").getAttribute("data-tilda-lazy") || t_feed_onFuncLoad("t_lazyload_update", (function () {
				t_lazyload_update()
			})), a && setTimeout((function () {
				"function" == typeof t_animate__startAnimation && t_animate__startAnimation()
			})), !r.previewmode) try {
			addEditFieldEvents_new(o)
		} catch (e) {}
	}
}

function t_feed_showMore(e, t) {
	var o = document.querySelector("#rec" + e),
		r = o.querySelector(".js-feed"),
		a = o.querySelector(".js-feed-container"),
		s = r.getAttribute("data-feed-grid-type"),
		d = o.querySelector(".js-feed-btn-show-more"),
		i = 1;
	null !== d && (d.addEventListener("click", (function () {
		window.tFeedPosts[e].switcher ? i = 2 : i++, window.tFeedPosts[e].switcher = !1, t_feed_loadPosts(e, t, i, !0)
	})), t.isHorizOnMob && a.addEventListener("scroll", t_throttle((function () {
		var e = a.scrollWidth,
			t = a.scrollLeft;
		a.offsetWidth + t + 20 > e && "none" !== getComputedStyle(d).display && d.click()
	}), 200))), "slider" === s && r.addEventListener("feedsLastSlide", (function () {
		window.tFeedPosts[e].switcher ? i = 2 : i++, window.tFeedPosts[e].switcher = !1, t_feed_loadPosts(e, t, i, !0)
	}))
}

function t_feed_initFeedParts(e, t) {
	var o = document.querySelector("#rec" + e),
		r = o.querySelector(".js-feed"),
		a = o.querySelector(".js-feed-container"),
		s = r.getAttribute("data-feed-grid-type"),
		d = o.querySelectorAll(".js-feed-parts-switcher"),
		i = !1;
	Array.prototype.forEach.call(d, (function (d) {
		d.addEventListener("click", (function (d) {
			var n = d.target;
			if (n) {
				i = !0, n && !n.classList.contains("js-feed-parts-switcher") && (n = n.closest(".js-feed-parts-switcher"));
				var l = o.querySelector(".t-feed__parts-switch-btn-all"),
					p = n.getAttribute("data-feedpart-uid");
				if (o.querySelector(".t-active").classList.remove("t-active"), n.classList.add("t-active"), t.feeduid = t.feeduid.split("-")[0] + "-" + p, window.tFeedPosts[e].switcher = !0, window.tFeedPosts[e].count = 0, l.classList.contains("t-feed__parts-switch-btn_hide") && !t.showPartAll && l.classList.remove("t-feed__parts-switch-btn_hide"), t_feed_showLoadersForPostsList(e), t_feed_loadPosts(e, t, 1, !0), "slider" === s) {
					var _ = parseInt(a.getAttribute("data-slider-totalslides"), 10),
						c = parseInt(a.getAttribute("data-slider-items-in-row"), 10),
						u = r.querySelector(".t-slds__arrow_wrapper-right"),
						f = r.querySelector(".t-slds__arrow_wrapper-left");
					_ <= c && u && (u.style.display = "none"), f && (f.style.display = "none"), t_onFuncLoad("t_slds__initFeedsSlider", (function () {
						t_slds__initFeedsSlider(e, o)
					}))
				}
				n.classList.contains("t-feed__parts-switch-btn-all") && history.replaceState({}, null, window.location.href.split("#")[0]), setTimeout((function () {
					i = !1
				}), 200)
			}
		}))
	})), window.addEventListener("hashchange", (function () {
		if (-1 !== window.location.hash.indexOf("#!/tfeeds/")) try {
			if (!i) {
				var e = decodeURI(window.location.hash),
					t = document.querySelector('.js-feed-parts-switcher [href="' + e + '"]');
				if (t) {
					var o = e.split("/"),
						r = o[o.length - 3];
					t_feed_scrollToFeed(document.querySelector('.js-feed[data-feed-uid="' + r + '"]')), t.click()
				}
			}
		} catch (e) {}
	}))
}

function t_feed_showLoadersForPostsList(e) {
	var t = document.querySelector("#rec" + e),
		o = t.querySelectorAll(".t-feed__post"),
		r = t.querySelector(".t-feed__show-more-btn"),
		a = t.querySelector(".js-feed-preloader");
	if (Array.prototype.forEach.call(o, (function (e) {
			e.classList.add("t-feed__post_hidden")
		})), r && r.classList.add("t-feed__show-more-btn_hidden"), a) {
		var s = setTimeout((function () {
			a.style.display = "", a.style.opacity = "0", a.style.transitionDuration = "0.2s", a.style.opacity = "1"
		}), 1e3);
		t.setAttribute("data-preloader-timeout", s)
	}
}

function t_feed_drawWholePost(e, t, o, r) {
	var a = document.querySelector("#rec" + e),
		s = document.querySelector(".t-records"),
		d = a.querySelector(".js-feed"),
		i = d.getAttribute("data-feed-grid-type"),
		n = d.getAttribute("data-feed-col-modification"),
		l = d.querySelector(".js-feed-container"),
		p = t.directlink ? t.directlink : "#postpopup",
		_ = "_blank" == t.directtarget ? 'target="_blank"' : "",
		c = "left" === o.align ? "t-align_left" : "t-align_center",
		u = o.itemsAnim && o.previewmode ? "t-animate" : "";
	s.getAttribute("data-blocks-animationoff") && (u = "");
	var f = o.itemsAnim ? 'data-animate-style="' + o.itemsAnim + '" data-animate-chain="yes"' : "",
		g = "",
		w = o.previewmode ? '<a href="' + p + '" ' + _ + ' class="js-feed-post-link">' : "",
		v = o.previewmode ? "</a>" : "";
	if ("row" === i || "row-bigimg" === i ? g = "t-col t-col_" + o.colClass + " t-prefix_" + o.prefixClass : "col" !== i && "slider" !== i || (g = o.blocksClass + " " + c), "col" === i) {
		var m = parseInt(o.blocksInRow, 10);
		1 === m ? l.classList.add("t-feed__container_inrow1") : 2 === m ? l.classList.add("t-feed__container_inrow2") : 4 === m ? l.classList.add("t-feed__container_inrow4") : l.classList.add("t-feed__container_inrow3")
	}
	var h = "slider" === i ? "t-slds__item" + (0 == r ? " t-slds__item_active" : "") : "",
		y = "slider" === i ? "data-slide-index=" + (window.tFeedPosts[e].count + 1) : "",
		b = "";
	"col" === i && window.tFeedPosts[e].count > 0 && (b = ' style="margin-top:' + o.vindent + '"');
	var P = "slider" === i ? "div" : "li",
		S = "";
	return S += "<" + P + ' class="js-feed-post t-feed__post t-feed__post_hidden t-item t-width ' + h + " " + g + " " + u + '" ' + f + ' data-post-uid="' + t.uid + '" ' + y + b + ">", "row" !== i || o.separator.hideSeparator || (S += "" + t_feed_drawPostSeparatorLine(o)), "slider" === i && (S += w), "row" === i || "side-panel" === i ? S += "" + t_feed_drawRowType(t, o, e) : "col" === i ? S += "" + t_feed_drawColType(t, o, n, e) : "slider" === i ? S += "" + t_feed_drawSliderType(t, o, n, e) : "row-bigimg" === i && (S += "" + t_feed_drawRowBigImgType(t, o, e)), "slider" === i && (S += v), S += "</" + P + ">"
}

function t_feed_drawRowBigImgType(e, t, o) {
	var r;
	r = "aftertitle" === t.imagePos && ("aftertitle" !== t.datePos && "aftertitle" !== t.partsPos);
	var a = "";
	return a += '<div class="t-feed__row-bigimg-grid__post-wrapper">', "beforetitle" == t.imagePos && (a += "" + t_feed_drawImageInRowBig(t, e, "beforetitle", o)), (t.showDate && "beforetitle" == t.datePos || t.showParts && e.postparts.length > 0 && "beforetitle" == t.partsPos) && (a += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "col", o)), a += "" + t_feed_drawTitle(o, t, e, "medium", r), (t.showDate && "aftertitle" == t.datePos || t.showParts && e.postparts.length > 0 && "aftertitle" == t.partsPos) && (a += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "col", o)), "aftertitle" == t.imagePos && (a += "" + t_feed_drawImageInRowBig(t, e, "aftertitle", o)), t.showShortDescr && (a += '    <div class="t-feed__textwrapper">', a += "" + t_feed_drawDescr(t, e, "medium"), a += "    </div>"), (t.showDate && "afterdescr" == t.datePos || t.showParts && e.postparts.length > 0 && "afterdescr" == t.partsPos) && (a += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "col", o)), "afterdescr" == t.imagePos && (a += "" + t_feed_drawImageInRowBig(t, e, "afterdescr", o)), a += "  </div>", a += "</div>"
}

function t_feed_drawRowType(e, t, o) {
	var r = document.querySelector("#rec" + o).querySelector(".js-feed").getAttribute("data-feed-grid-type"),
		a = e.thumb ? e.thumb : e.image,
		s = "";
	"side-panel" === r ? s += '<div class="t-feed__row-grid__post-wrapper t-feed__row-grid__post-wrapper_panel">' : s += '<div class="t-feed__row-grid__post-wrapper' + (t.separator.hideSeparator ? " t-feed__row-grid__post-wrapper_padd-sm" : "") + '">';
	if ("video" === e.mediatype && (-1 === e.mediadata.indexOf("vimeo") && -1 === e.mediadata.indexOf(".mp4") || "" !== e.thumb || (a = "https://static.tildacdn.com/ffb6456b-781b-40e8-9517-ffb5225e8bcd/imgfish.jpg")), ("" !== e.thumb || "" !== e.image || "video" === e.mediatype) && t.showImage) {
		var d = e.uid ? 'bgimgfield="fe_img__' + e.uid + '"' : "";
		s += '<div class="t-feed__post-imgwrapper"><div class="js-feed-post-image t-feed__post-bgimg t-bgimg" data-original="' + a + '" style="background-image:url(' + t_feed_getLazyUrl(t, a) + ");width:" + t.imageWidth + ";height:" + t.imageHeight + '" ' + d + "></div></div>"
	}
	return s += '<div class="t-feed__textwrapper">', (t.showDate && "beforetitle" == t.datePosPs || t.showParts && e.postparts.length > 0 && "beforetitle" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "row", o)), s += "" + t_feed_drawTitle(o, t, e, "small", !1), (t.showDate && "aftertitle" == t.datePosPs || t.showParts && e.postparts.length > 0 && "aftertitle" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "row", o)), t.showShortDescr && (s += "" + t_feed_drawDescr(t, e, "small")), (t.showDate && "afterdescr" == t.datePosPs || t.showParts && e.postparts.length > 0 && "afterdescr" == t.partsPosPs) && (s += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "row", o)), s += "</div></div></div>"
}

function t_feed_drawColType(e, t, o, r) {
	var a = "bg" === o,
		s = t.btnsAlign ? " t-feed__col-grid__wrapper_align" : "",
		d = a ? " t-feed__col-grid__content" : "",
		i = a && "afterdescr" == t.imagePosPs ? " t-feed__col-grid__content_paddingtop" : "",
		n = a ? t.colWithBg.paddingSize : "",
		l = a || "afterdescr" != t.imagePosPs ? "" : " t-feed__col-grid__content_marginbottom",
		p = "";
	return p += '<div class="t-feed__col-grid__post-wrapper" ' + (a ? 'style="' + t_feed_addStyleToColWithBg(t) + '"' : "") + ">", "beforetitle" != t.imagePosPs && t.imagePosPs || (p += "" + t_feed_drawImage(t, e, "beforetitle", r, a)), p += '<div class="t-feed__col-grid__wrapper' + s + d + i + l + " " + n + '">', (t.showDate && "beforetitle" == t.datePos || t.showParts && e.postparts.length > 0 && "beforetitle" == t.partsPos) && (p += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "col", r)), p += '  <div class="t-feed__textwrapper">', p += "" + t_feed_drawTitle(r, t, e, "small", !1), (t.showDate && "aftertitle" == t.datePos || t.showParts && e.postparts.length > 0 && "aftertitle" == t.partsPos) && (p += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "col", r)), t.showShortDescr && (p += "" + t_feed_drawDescr(t, e, "small")), p += "  </div>", (t.showDate && "afterdescr" == t.datePos || t.showParts && e.postparts.length > 0 && "afterdescr" == t.partsPos) && (p += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "col", r)), t.btnReadMore && (p += "" + t_feed_drawReadMoreBtn(t)), p += "</div>", "afterdescr" == t.imagePosPs && (p += "" + t_feed_drawImage(t, e, "afterdescr", r, a)), p += "</div>"
}

function t_feed_drawSliderType(e, t, o, r) {
	var a = "bg" === o,
		s = t.btnsAlign ? " t-feed__slider-grid__wrapper_align" : "",
		d = a ? " t-feed__slider-grid__content" : "",
		i = a && "afterdescr" == t.imagePosPs ? " t-feed__slider-grid__content_paddingtop" : "",
		n = a ? t.colWithBg.paddingSize : "",
		l = a || "afterdescr" != t.imagePosPs ? "" : " t-feed__slider-grid__content_marginbottom";
	if (a || t.blocksWidth) var p = t.blocksWidth ? "width: " + t.blocksWidth + "px;" : "",
		_ = 'style="' + (p += a ? t_feed_addStyleToColWithBg(t) : "") + '"';
	var c = "";
	return c += '<div class="t-feed__slds-wrapper t-slds__wrapper" ' + ('style="' + t_feed__getWrapperPaddingsWithShadowCard(t) + '"') + ">", c += '<div class="t-feed__slider-grid__post-wrapper t-col" ' + _ + ">", "beforetitle" != t.imagePosPs && t.imagePosPs || (c += "" + t_feed_drawImage(t, e, "beforetitle", r, a)), c += '<div class="t-feed__slider-grid__wrapper' + s + d + i + l + " " + n + '">', (t.showDate && "beforetitle" == t.datePos || t.showParts && e.postparts.length > 0 && "beforetitle" == t.partsPos) && (c += "" + t_feed_drawDateAndParts(t, e, "beforetitle", "col", r)), c += '  <div class="t-feed__textwrapper">', c += "" + t_feed_drawTitle(r, t, e, "small", !1), (t.showDate && "aftertitle" == t.datePos || t.showParts && e.postparts.length > 0 && "aftertitle" == t.partsPos) && (c += "" + t_feed_drawDateAndParts(t, e, "aftertitle", "col", r)), t.showShortDescr && (c += "" + t_feed_drawDescr(t, e, "small")), c += "  </div>", (t.showDate && "afterdescr" == t.datePos || t.showParts && e.postparts.length > 0 && "afterdescr" == t.partsPos) && (c += "" + t_feed_drawDateAndParts(t, e, "afterdescr", "col", r)), t.btnReadMore && (c += "" + t_feed_drawReadMoreBtn(t)), c += "</div>", "afterdescr" == t.imagePosPs && (c += "" + t_feed_drawImage(t, e, "afterdescr", r, a)), c += "</div>", c += "</div>"
}

function t_feed__getWrapperPaddingsWithShadowCard(e) {
	if (!(e && e.colWithBg && (e.colWithBg.shadowSize || e.colWithBg.shadowSizeHover || e.colWithBg.shadow || e.colWithBg.shadowHover))) return "";
	var t = e.colWithBg.shadowSize,
		o = e.colWithBg.shadowSizeHover,
		r = e.colWithBg.shadowShiftyHover,
		a = e.colWithBg.shadow,
		s = e.colWithBg.shadowHover,
		d = parseInt(t, 10) || 0,
		i = parseInt(o, 10) || 0,
		n = "md" === r ? 20 : "sm" === r ? 10 : 0,
		l = Math.max(d, i),
		p = "padding-top:" + (a || s ? 20 : l) + "px;";
	return p += "padding-bottom:" + (a || s ? 20 : l + n) + "px;"
}

function t_feed_addStyleToColWithBg(e) {
	var t = "";
	t += e.colWithBg.background ? "background-color:" + e.colWithBg.background + ";" : "", t += e.colWithBg.borderRadius ? "border-radius:" + e.colWithBg.borderRadius + ";" : "";
	var o = e.colWithBg.shadowSize,
		r = e.colWithBg.shadowOpacity,
		a = e.colWithBg.shadow,
		s = "";
	return a ? s = "box-shadow: " + a + ";" : (o || r) && (r = r ? parseInt(r, 10) / 100 : .3, s = "box-shadow: 0px 0px " + (o = o ? parseInt(o, 10) : 20) + "px rgba(0,0,0," + r + ");"), t += s
}

function t_feed_unifyColHeights(e, t) {
	var o = document.querySelector("#rec" + e);
	if (o) {
		var r = o.querySelector(".js-feed");
		if (r) {
			var a = o.querySelectorAll(".t-feed__post"),
				s = t_feed_getBlocksInRowHeight(t, a),
				d = r.getAttribute("data-feed-grid-type"),
				i = o.querySelector(".js-feed-container");
			if (!r || "col" === d || "slider" === d)
				if (window.innerWidth <= 480 && !t.isHorizOnMob) Array.prototype.forEach.call(a, (function (e) {
					e.style.height = "auto"
				}));
				else if (i.offsetWidth > 0)
				if ("slider" === d) t_feed_calcHeight(r.querySelectorAll(".t-feed__slider-grid__wrapper")), t_onFuncLoad("t_slds_UpdateSliderHeight", (function () {
					t_slds_UpdateSliderHeight(e)
				})), window.addEventListener("load", (function () {
					t_feed_calcHeight(r.querySelectorAll(".t-feed__slider-grid__wrapper"))
				}));
				else
					for (var n = 0; n < a.length; n += s) {
						var l = Array.prototype.slice.call(a).slice(n, n + s),
							p = [];
						l.forEach((function (e) {
							p.push(e.querySelector(".t-feed__col-grid__wrapper"))
						})), t_feed_calcHeight(p), window.addEventListener("load", (function () {
							t_feed_calcHeight(p)
						}))
					}
		}
	}
}

function t_feed_calcHeight(e) {
	var t = 0;
	Array.prototype.forEach.call(e, (function (e) {
		if (e) {
			e.style.removeProperty("height");
			var o = e.offsetHeight;
			o > t && (t = o)
		}
	})), Array.prototype.forEach.call(e, (function (e) {
		e.style.height = t + "px"
	}))
}

function t_feed_getBlocksInRowHeight(e, t) {
	return window.innerWidth <= 960 && e.isHorizOnMob ? t.length : window.innerWidth <= 960 ? 1 : parseInt(e.blocksInRow)
}

function t_feed_drawImageInRowBig(e, t, o, r) {
	var a = t.thumb ? t.thumb : t.image,
		s = e.imageRatio + "%",
		d = "";
	"" === t.thumb && "" === t.image && "video" !== t.mediatype || !e.showImage || (d += '<div class="t-feed__post-imgwrapper t-feed__post-imgwrapper_' + o + '" style="padding-bottom:' + s + ';">', (e.showDate && "onimage" == e.datePos || e.showParts && "onimage" == e.partsPos) && (d += "" + t_feed_drawDateAndParts(e, t, "onimage", "col", r)), d += '<div class="t-feed__post-bgimg t-bgimg" ' + (t.uid ? 'bgimgfield="fe_img__' + t.uid + '"' : "") + ' data-original="' + a + '" style="background-image:url(' + t_feed_getLazyUrl(e, a) + ');"></div></div>');
	return d
}

function t_feed_drawImage(e, t, o, r, a) {
	var s, d = 'style="' + ("aspect-ratio: " + (e.imageRatio ? 100 / e.imageRatio : 100 / 66).toFixed(1) + ";") + (s = a && e.colWithBg.borderRadius ? "afterdescr" == o ? "border-radius: 0 0 " + e.colWithBg.borderRadius + " " + e.colWithBg.borderRadius + ";" : "border-radius:" + e.colWithBg.borderRadius + " " + e.colWithBg.borderRadius + " 0 0;" : "") + '"',
		i = e.isHorizOnMob && e.hasOriginalAspectRatio ? "t-feed__post-imgwrapper_mobile-nopadding" : "",
		n = "";
	if (("" !== t.thumb || "" !== t.image || "video" === t.mediatype) && e.showImage) {
		var l = t.thumb ? t.thumb : t.image;
		if ("video" === t.mediatype && -1 != t.mediadata.indexOf("vimeo") && "" === t.thumb && (l = "https://static.tildacdn.com/ffb6456b-781b-40e8-9517-ffb5225e8bcd/imgfish.jpg"), n += '<div class="t-feed__post-imgwrapper t-feed__post-imgwrapper_' + o + " " + i + '" ' + d + ">", (e.showDate && "onimage" == e.datePos || e.showParts && "onimage" == e.partsPos) && (n += "" + t_feed_drawDateAndParts(e, t, "onimage", "col", r)), e.hasOriginalAspectRatio) {
			var p = t.uid ? 'imgfield="fe_img__' + t.uid + '"' : "";
			n += "<img " + t_feed_getLazySrc(e, l) + ' class="t-feed__post-img t-img js-feed-img" ' + p + " />"
		} else {
			n += '<div class="t-feed__post-bgimg t-bgimg" ' + (t.uid ? 'bgimgfield="fe_img__' + t.uid + '"' : "") + ' data-original="' + l + '" style="background-image:url(' + t_feed_getLazyUrl(e, l) + ");" + s + '"></div>'
		}
		n += "</div>"
	}
	return n
}

function t_feed_drawTitle(e, t, o, r, a) {
	var s = document.querySelector("#rec" + e);
	if (s) {
		var d = s.querySelector(".js-feed").getAttribute("data-feed-grid-type"),
			i = a ? "t-feed__post-title_margin" : "",
			n = "t-name";
		"medium" == r && (n = "t-heading");
		var l = "";
		4 == t.blocksInRow ? l += "t-name_xs" : 2 != t.blocksInRow && t.blocksInRow ? l += "t-name_md" : l += "t-name_xl", "medium" == r && (l = "t-heading_lg");
		var p = o.directlink ? o.directlink : "#postpopup",
			_ = "_blank" == o.directtarget ? 'target="_blank"' : "",
			c = t.previewmode ? '<a href="' + p + '" ' + _ + ' class="t-feed__link js-feed-post-link">' : "",
			u = t.previewmode ? "</a>" : "",
			f = "",
			g = t.typo && t.typo.title ? ' style="' + t.typo.title + '"' : "";
		return f += '<div class="js-feed-post-title t-feed__post-title ' + i + " " + n + " " + l + '" ' + (o.uid ? 'field="fe_title__' + o.uid + '" data-redactor-toolbar="no"' : "") + g + ">", "slider" !== d && (f += c), f += o.title, "slider" !== d && (f += u), f += "</div>"
	}
}

function t_feed_drawDescr(e, t, o) {
	var r = "xxs";
	"medium" == o && (r = "sm");
	var a = "",
		s = e.typo && e.typo.descr ? ' style="' + e.typo.descr + '"' : "";
	"" != t.descr && (a += '<div class="js-feed-post-descr t-feed__post-descr t-descr t-descr_' + r + '" ' + (t.uid ? 'field="fe_descr__' + t.uid + '" data-redactor-toolbar="no"' : "") + s + ">" + t_feed_cropShortDescr(t, e) + "</div>");
	return a
}

function t_feed_drawDateAndParts(e, t, o, r, a) {
	var s = "onimage" === o,
		d = "afterdescr" === o || "beforetitle" === o || "aftertitle" === o,
		i = "col" === r ? e.datePos : e.datePosPs,
		n = "col" === r ? e.partsPos : e.partsPosPs,
		l = '<span class="js-feed-post-date t-feed__post-date t-uptitle t-uptitle_xs"' + (e.typo && e.typo.subtitle ? ' style="' + e.typo.subtitle + '"' : "") + ">" + t_feed_formateDate(t.date, e, a) + "</span>",
		p = s ? "</div>" : "",
		_ = s ? '<div class="t-feed__post-label">' : "",
		c = s ? "</div>" : "",
		u = d ? "</div>" : "",
		f = "";
	return f += d ? '<div class="t-feed__post-parts-date-row t-feed__post-parts-date-row_' + o + '">' : "", f += s ? '<div class="t-feed__post-label-wrapper">' : "", e.showDate && i == o && (f += _, f += l, f += c), t.postparts.length > 0 && e.showParts && n == o && (f += _, f += "" + t_feed_drawParts(e, t), f += c), f += p, f += u
}

function t_feed_drawParts(e, t) {
	var o = e.typo && e.typo.subtitle ? 'style="' + e.typo.subtitle + '"' : "",
		r = "";
	return t.postparts.forEach((function (e) {
		"" != e && (r += '<span class="t-feed__post-tag t-uptitle t-uptitle_xs" ' + o + ">" + e.parttitle + "</span>")
	})), r
}

function t_feed_drawReadMoreBtn(e) {
	var t = e.btnTextColor ? 'style="color:' + e.btnTextColor + ';"' : "",
		o = "sm" == e.btnSize ? "xs" : "sm",
		r = "";
	return r += '<div class="t-feed__button-readmore ' + ("text" === e.btnType ? "t-feed__button-readmore_text" : "") + '">', "text" === e.btnType ? r += '<div class="t-btntext" ' + t + ">" + e.btnReadMore + "</div>" : r += '<div class="t-btn t-btn_' + o + '" data-buttonfieldset="button2" style="' + e.btnStyle + '"><div class="t-feed__button-container"><span>' + e.btnReadMore + "</span></div></div>", r += "</div>"
}

function t_feed_drawBtnsContainer(e) {
	var t = "";
	return t += '<div class="t-feed__buttons-wrapper t-feed__buttons-wrapper_hidden t-container">', e.btnText && parseInt(e.amountOfPosts, 10) && (t += t_feed_drawShowMoreBtn(e)), e.btnAllPosts.text && (t += t_feed_drawShowAllPostsBtn(e)), t += "</div>"
}

function t_feed_drawShowMoreBtn(e) {
	var t = "";
	if (e.btnText) {
		var o = String(e.btnText).replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&amp;/g, "&");
		t += '<div class="t-feed__button-wrapper"><button type="button" class="js-feed-btn-show-more t-feed__showmore-btn t-btn t-btn_md" style="' + e.bbtnStyle + '"><div class="t-feed__button-container"><span>' + o + "</span></div></button></div>"
	}
	return t
}

function t_feed_drawShowAllPostsBtn(e) {
	var t = e.btnAllPosts.target ? 'target="_blank"' : "",
		o = "";
	return o += '<div class="t-feed__button-wrapper"><a href="' + e.btnAllPosts.link + '" class="js-feed-btn-show-all-posts t-feed__showallpost-btn t-btn t-btn_md" ' + t + ' data-buttonfieldset="bbutton" style="' + e.bbtnStyle + '"><div class="t-feed__button-container"><span>' + e.btnAllPosts.text + "</span></div></a></div>"
}

function t_feed_addFeedParts(e, t, o, r) {
	var a = document.querySelector("#rec" + e).querySelector(".js-feed");
	t.feedPartsArr = o;
	var s = t_feed_drawFeedPartsControl(t, r, e);
	a.querySelector(".js-feed-parts-select-container").insertAdjacentHTML("afterbegin", s), t_feed_initFeedParts(e, t)
}

function t_feed_drawFeedPartsControl(e, t, o) {
	var r = "";
	e.parts_opts && (r = e.parts_opts.partsBgColor || e.parts_opts.partsBorderSize || e.parts_opts.partsBorderColor ? "t-feed__parts-switch-btn_bg" : "");
	var a = "";
	e.parts_opts && (a = e.parts_opts.align && "left" === e.parts_opts.align ? "t-align_left" : "t-align_center");
	var s = "";
	s += '<ul class="t-feed__parts-switch-wrapper ' + a + '" aria-label="' + t_feed_getDictionary("feedsections", o) + '">', s += '<li class="js-feed-parts-switcher t-feed__parts-switch-btn ' + r + " t-feed__parts-switch-btn-all t-name t-name_xs t-menu__link-item t-active" + (e.showPartAll ? "" : " t-feed__parts-switch-btn_hide") + '" data-feedpart-title="" data-feedpart-uid="' + e.feeduid + '"><a href="javascript:void(0);">' + t_feed_getDictionary("all", o) + "</a></li>";
	for (var d = 0; d < e.feedPartsArr.length; d++) {
		var i = e.feedPartsArr[d];
		s += '<li class="js-feed-parts-switcher t-feed__parts-switch-btn ' + r + ' t-name t-name_xs t-menu__link-item" data-feedpart-title="' + i.title + '" data-feedpart-uid="' + i.uid + '"><a href="#!/tfeeds/' + t + "/c/" + i.title + '">' + i.title + "</a></li>"
	}
	return s += "</ul>"
}

function t_feed_getLazyUrl(e, t) {
	if (!e.isPublishedPage || "y" !== window.lazy) return t;
	if (-1 === t.indexOf("static.tildacdn.com")) return t;
	var o = t.split("/");
	return o.splice(t.split("/").length - 1, 0, "-/resizeb/x20"), o.join("/")
}

function t_feed_getLazySrc(e, t) {
	if (!e.isPublishedPage || "y" !== window.lazy) return 'src="' + t + '"';
	var o = t.split("/");
	return o.splice(t.split("/").length - 1, 0, "-/empty"), 'src="' + o.join("/") + '" data-original="' + t + '"'
}

function t_feed_drawPostSeparatorLine(e) {
	var t = "",
		o = "";
	return o += e.separator.height ? "height:" + e.separator.height + ";" : "", o += e.separator.color ? "background-color:" + e.separator.color + ";" : "", t += '<div class="t-feed__post__line-separator" ' + (o = (o += e.separator.opacity ? "opacity:" + e.separator.opacity / 100 + ";" : "") ? 'style="' + o + '"' : "") + "></div>"
}

function t_feed_cropShortDescr(e, t) {
	var o = e.descr;
	return "" != t.amountOfSymbols && (o = (o = (o = o.replace(/<[^>]+>/g, "")).replace(/&nbsp;/g, " ")).substr(0, t.amountOfSymbols), e.descr.length > t.amountOfSymbols && (o += " ...")), o
}

function t_feed_initPopup(e, t, o, r) {
	var a = document.querySelector("#rec" + e),
		s = a.querySelector(".js-feed"),
		d = s.getAttribute("data-feed-grid-type"),
		i = window.location.href,
		n = a.querySelectorAll('[href^="#postpopup"]');
	Array.prototype.forEach.call(n, (function (t) {
		var r = t.closest(".t-feed__post").getAttribute("data-post-uid"),
			a = o[e][r];
		void 0 !== a && t.setAttribute("href", a.url), t_feed__addAttributesForAccessibility(a)
	})), Array.prototype.forEach.call(n, (function (a) {
		a.addEventListener("click", (function (i) {
			i.preventDefault(), "side-panel" === d && s.classList.add("t946__feed-container_expanded");
			var n = a.closest(".js-feed-post").getAttribute("data-post-uid"),
				l = o[e][n],
				p = i.ctrlKey,
				_ = i.metaKey && -1 !== navigator.platform.indexOf("Mac");
			p || _ ? window.open(l.url) : (t.header || t.footer) && t.disablepopup ? location.href = l.url : t_feed_workPostPopup(e, t, l, n, r)
		}))
	})), document.addEventListener("keydown", (function (t) {
		27 === t.keyCode && t_feed_closePopup(e, r, i)
	}))
}

function t_feed_workPostPopup(e, t, o, r, a) {
	var s = document.querySelector("#rec" + e).querySelector(".js-feed");
	if (void 0 !== window.tFeedPosts[e] && (window.tFeedPosts[e].title = document.title), a.popup_opts.isShare) {
		var d = document.createElement("script");
		d.src = "https://static.tildacdn.com/js/ya-share.js", d.async = !0, document.body.appendChild(d)
	}
	s.insertAdjacentHTML("beforeend", t_feed_drawWholePostPopup(t, o, a, r, e));
	var i = t.code;
	"" != i && null != i && -1 !== i.indexOf("VK") && 1 != o.disablecomments && t_feed_loadCommentsVkWidget(s), "all" !== a.popup_opts.showRelevants && "cc" !== a.popup_opts.showRelevants || t_feed_addRelevantsPosts(e, a, o, r), setTimeout((function () {
		a.popup_opts.zoom && t_feed_addZoom()
	}), 100), t_feed_showPopup(e, o, a), document.title = (o.title || "").replace(/&amp;/g, "&").replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&nbsp;/g, " "), void 0 !== o.needGetPost && (t_feed_addPostPopupLoader(), t_feed_loadPostPopupData(e, r, a)), "gallery" == o.mediatype && ("" === a.popup_opts.bgSize ? setTimeout((function () {
		t_feed_addPostPopupGallery(e, o)
	}), 500) : t_feed_addPostPopupGallery(e, o)), a.isPublishedPage && t_feed_changeURL(t, o)
}

function t_feed__addClassOnTriggerButton() {
	var e = document.querySelectorAll(".t-popup__triggered-btn");
	Array.prototype.forEach.call(e, (function (e) {
		e.classList.remove("t-popup__triggered-btn")
	})), document.addEventListener("keydown", (function (e) {
		if (13 === e.keyCode) {
			var t = window.location.href;
			if (-1 === t.indexOf("tpost/")) return;
			var o = document.querySelector('a[href="' + t + '"]');
			window.isMobile || o.classList.add("t-popup__triggered-btn")
		}
	}))
}

function t_feed__addFocusOnTriggerButton() {
	var e = document.querySelector(".t-popup__triggered-btn");
	e && (e.focus(), e.classList.remove("t-popup__triggered-btn"))
}

function t_feed__addAttributesForAccessibility(e) {
	var t = document.querySelector('[data-post-uid="' + e.uid + '"] .t-feed__link');
	t && -1 !== e.url.indexOf("tpost") && (t.setAttribute("role", "button"), t.setAttribute("aria-haspopup", "dialog"))
}

function t_feed_loadCommentsVkWidget(e) {
	var t = e.querySelector(".t-feed__post-popup__comments"),
		o = t ? t.querySelectorAll("script") : [];
	Array.prototype.forEach.call(o, (function (e) {
		var t = document.createElement("script");
		if (Array.prototype.forEach.call(e.attributes, (function (e) {
				t.setAttribute(e.name, e.value)
			})), 0 === e.innerHTML.length) {
			var o = document.createElement("script");
			o.src = e.attributes.src.value, document.head.appendChild(o)
		} else t.appendChild(document.createTextNode(e.innerHTML)), setTimeout((function () {
			e.parentNode.replaceChild(t, e)
		}), 500)
	}))
}

function t_feed_loadPostPopupData(e, t, o) {
	var r = "https://" + window.t_feeds_endpoint + "/api/getpost/?postuid=" + t;
	if (!o.isPublishedPage) {
		var a = document.querySelector(".t-records").getAttribute("data-tilda-project-id"),
			s = window.location.hostname.split(".");
		r = "https://" + ("tilda." + s[s.length - 1]) + "/projects/feeds/getpost/?projectid=" + a + "&postuid=" + t
	}
	var d = Date.now(),
		i = new XMLHttpRequest;
	i.open("GET", r + "&" + e, !0), i.timeout = 25e3, i.onload = function () {
		if (this.status >= 200 && this.status < 400) {
			if ("" === i.response) return;
			if ("object" != typeof JSON.parse(i.response)) return;
			var e = "";
			try {
				e = JSON.parse(i.response).post.text
			} catch (e) {}
			var t = document.querySelector(".js-feed-post-text"),
				r = document.createRange().createContextualFragment(e);
			t.innerHTML = "", t.appendChild(r), o.popup_opts.zoom && t_feed_addZoom(), t_feed_initCodeHightlight()
		}
	}, i.onerror = function () {
		var e = i.response,
			t = Date.now() - d;
		0 == e.status && t < 100 && 0 !== e.readyState && alert("Request error (get posts). Please check internet connection...")
	}, i.send()
}

function t_feed_addPostPopupGallery(e, t) {
	"" !== t.mediadata && JSON.parse(t.mediadata).length > 0 && (t_feed_setGalleryImageHeight(e), t_feed_onFuncLoad("t_sldsInit", (function () {
		t_sldsInit(e + " .t-feed__post-popup"), "y" !== window.lazy && "yes" !== document.querySelector("#allrecords").getAttribute("data-tilda-lazy") || t_feed_onFuncLoad("t_lazyload_update", (function () {
			t_lazyload_update()
		})), t_feed_onFuncLoad("t_slds_updateSlider", (function () {
			t_slds_updateSlider(e + " .t-feed__post-popup")
		})), t_feed_onFuncLoad("t_slds_UpdateSliderHeight", (function () {
			t_slds_UpdateSliderHeight(e + " .t-feed__post-popup")
		})), t_feed_onFuncLoad("t_slds_UpdateSliderArrowsHeight", (function () {
			t_slds_UpdateSliderArrowsHeight(e + " .t-feed__post-popup")
		}))
	})))
}

function t_feed_addPostPopupLoader() {
	for (var e = "", t = 0; t < 20; t++) e += '<div class="t-feed__post-popup__text-loader"></div>';
	document.querySelector(".js-feed-post-text").innerHTML = e
}

function t_feed_addZoom() {
	var e = document.querySelectorAll(".js-feed-post-text img");
	Array.prototype.forEach.call(e, (function (e) {
		e.classList.add("t-zoomable"), e.setAttribute("data-zoomable", "yes"), e.setAttribute("data-img-zoom-url", e.getAttribute("src"))
	}))
}

function t_feed_showPopup(e, t, o) {
	var r = document.querySelector("#rec" + e).querySelector(".t-feed__post-popup.t-popup"),
		a = r.querySelector(".t-feed__post-popup__arrow-top"),
		s = window.location.href;
	r.style.display = "block", r.classList.add("t-popup_show"), setTimeout((function () {
		r.querySelector(".t-popup__container").classList.remove("t-feed__post-popup__container_loading"), r.focus(), t_feed__trapFocus(r), t_feed__addClassOnTriggerButton()
	}), 300), setTimeout((function () {
		r.querySelector(".t-popup__container").classList.add("t-popup__container-animated"), "y" !== window.lazy && "yes" !== document.querySelector("#allrecords").getAttribute("data-tilda-lazy") || t_feed_onFuncLoad("t_lazyload_update", (function () {
			t_lazyload_update()
		}))
	}), 50), document.body.classList.add("t-body_popupshowed"), t_feed_getCountOfViews(r), a && (r.addEventListener("scroll", (function () {
		t_feed_addPostPopupArrowTop(this, a)
	})), a.addEventListener("click", (function () {
		t_feed_scrollTo(r, 0, 300)
	}))), t_feed_openShare(r), t_feed_sendDataToAnalytics(r, t), document.querySelector(".js-feed-popup-close").addEventListener("click", (function () {
		t_feed_closePopup(e, o, s)
	})), window.addEventListener("beforeprint", (function () {
		document.location.reload()
	}))
}

function t_feed_scrollTo(e, t, o) {
	if (!(o <= 0)) {
		var r = (t - e.scrollTop) / o * 10;
		setTimeout((function () {
			e.scrollTop = e.scrollTop + r, e.scrollTop !== t && t_feed_scrollTo(e, t, o - 10)
		}), 10)
	}
}

function t_feed_sendDataToAnalytics(e, t) {
	var o = e.getAttribute("data-track-popup");
	if (o) {
		var r = "Popup: " + t.title;
		Tilda.sendEventToStatistics(o, r)
	}
}

function t_feed_openShare(e) {
	window.jQuery && e instanceof jQuery && (e = document);
	var t = e.querySelector(".js-feed-share-open"),
		o = e.querySelector(".t-feed__share"),
		r = e.querySelector(".t-feed__share-container");
	if (t) {
		var a, s = setInterval((function () {
			e.querySelector(".ya-share2").classList.contains("ya-share2_inited") && (t.classList.add("t-feed__share-icon_active"), clearInterval(s))
		}), 100);
		if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) t.addEventListener("click", (function () {
			o.classList.contains("t-feed__share_open") ? o.classList.remove("t-feed__share_open") : o.classList.add("t-feed__share_open")
		}));
		else r.addEventListener("mouseover", (function () {
			t.classList.contains("t-feed__share-icon_active") && o.classList.add("t-feed__share_open"), clearTimeout(a)
		})), t.addEventListener("keydown", (function (e) {
			13 === e.keyCode && (t.classList.contains("t-feed__share-icon_active") && (o.classList.contains("t-feed__share_open") ? (o.classList.remove("t-feed__share_open"), t.setAttribute("aria-expanded", "false")) : (o.classList.add("t-feed__share_open"), t.setAttribute("aria-expanded", "true"))), clearTimeout(a))
		})), r.addEventListener("mouseout", (function () {
			a = setTimeout((function () {
				o.classList.remove("t-feed__share_open")
			}), 750)
		}))
	}
}

function t_feed_addPostPopupArrowTop(e, t) {
	var o = t.classList.contains("t-feed__post-popup__arrow-top_show");
	e.scrollTop > 300 ? o || t.classList.add("t-feed__post-popup__arrow-top_show") : o && t.classList.remove("t-feed__post-popup__arrow-top_show")
}

function t_feed_getCountOfViews(e) {
	window.jQuery && e instanceof jQuery && (e = document.querySelector(".t-feed__post-popup"));
	var t = "https://" + window.t_feeds_endpoint + "/api/setpostviewed/";
	setTimeout((function () {
		var o = new XMLHttpRequest;
		o.open("GET", t + "?postuid=" + e.getAttribute("data-feed-popup-postuid"), !0), o.timeout = 25e3, o.onload = function () {}, o.onerror = function () {}, o.send()
	}), 3e3)
}

function t_feed_closePopup(e, t, o) {
	var r = document.querySelector("#rec" + e).querySelector(".js-feed");
	if (r) {
		var a = document.querySelector(".t-feed__post-popup.t-popup"),
			s = r.getAttribute("data-feed-grid-type");
		if (a) {
			"side-panel" === s && r.classList.remove("t946__feed-container_expanded"), document.body.classList.remove("t-body_popupshowed"), a.classList.remove("t-popup_show");
			var d = o.indexOf("/tpost/");
			if (/iPhone|iPad|iPod/i.test(navigator.userAgent) && d < 0 && (d = o.indexOf("/tpost/")) < 0 && (d = o.indexOf("%2Ftpost%2F")), window.tFeedPosts[e].title && (document.title = window.tFeedPosts[e].title), i && t.popup_opts.isShare) {
				var i = document.querySelector('script[src^="https://static.tildacdn.com/js/ya-share.js"]');
				null !== i.parentNode && i.parentNode.removeChild(i)
			}
			if (setTimeout((function () {
					a.scrollTop = 0, a && !a.classList.contains("t-popup_show") && null !== a.parentNode && a.parentNode.removeChild(a), null !== window.history.state && window.history.pushState(null, null, o)
				}), 300), -1 != o.indexOf("#!"))
				if (a = document.querySelector(".t-feed__post-popup")) t_feed_scrollToFeed(a.closest(".js-feed"));
			t_feed__addFocusOnTriggerButton()
		}
	}
}

function t_feed_changeURL(e, t) {
	var o = window.location.href,
		r = window.location.protocol + "//" + window.location.hostname + "/" + t.url.split("/").slice(3).join("/"),
		a = document.title + "-" + t.title; - 1 === o.indexOf("/tpost/") && -1 === o.indexOf("%2Ftpost%2F") && void 0 !== history.pushState && window.history.pushState({
		postData: "open",
		obj: e,
		post: t
	}, a, r)
}

function t_feed_drawWholePostPopup(e, t, o, r, a) {
	var s = document.querySelector("#rec" + a).querySelector(".js-feed").getAttribute("data-feed-grid-type"),
		d = o.popup_opts.popupStat ? 'data-track-popup="' + o.popup_opts.popupStat + '"' : "",
		i = o.popup_opts.overlayBgColorRgba ? 'style="background-color:' + o.popup_opts.overlayBgColorRgba + '"' : "",
		n = o.popup_opts.overlayBgColorRgba ? 'style="background-color:' + o.popup_opts.overlayBgColorRgba.replace("1)", "0.9)") + '"' : "",
		l = o.popup_opts.inTwoColumns ? "" : '<div class="t-feed__post-popup__content t-col t-col_8">',
		p = o.popup_opts.inTwoColumns ? "" : "</div>",
		_ = o.popup_opts.inTwoColumns ? '<div class="t-feed__post-popup__content t-feed__post-popup__content_half t-feed__post-popup__content-col t-col t-col_6">' : "",
		c = o.popup_opts.inTwoColumns ? "</div>" : "",
		u = "";
	return u += '<div class="t-feed__post-popup' + ("side-panel" === s ? " t-feed__post-popup_panel " : " ") + 't-popup" data-feed-popup-feeduid="' + e.feeduid + '" data-feed-popup-postuid="' + r + '" ' + d + " " + i + '><div class="t-feed__post-popup__close-wrapper t-feed__post-popup__close-wrapper_loading" ' + n + ">" + t_feed_drawPostPopupCloseIcon(a, o) + t_feed_drawPopupTitle(e, o) + t_feed_drawSharing(o) + "</div>", u += '<div class="t-feed__post-popup__container' + ("side-panel" === s ? " t-feed__post-popup__container_panel " : " ") + 't-feed__post-popup__container_loading t-container t-popup__container t-popup__container-static t-popup__container-animated"><div class="t-feed__post-popup__content-wrapper">', u += l, o.popup_opts.inTwoColumns || ("aftertitle" == o.popup_opts.imagePos ? (u += "" + t_feed_addPostPopupHeading(o, t, a), u += "" + t_feed_drawPostPopupCover(a, "aftertitle", o, t)) : (u += "" + t_feed_drawPostPopupCover(a, "beforetitle", o, t), u += "" + t_feed_addPostPopupHeading(o, t, a))), o.popup_opts.inTwoColumns && (u += _, u += "" + t_feed_drawPostPopupCover(a, "beforetitle", o, t), u += c), u += _, o.popup_opts.inTwoColumns && (u += "" + t_feed_addPostPopupHeading(o, t, a)), u += "" + t_feed_drawPostPopupText(o, t), t.authorname && (u += "" + t_feed_drawPostPopupAuthor(o, t)), u += "" + t_feed_drawPostPopupDateAndParts("aftertext", o, t, a), u += c, u += p, u += "</div>", "" != e.code && null != e.code && 1 != t.disablecomments && (u += '<div class="t-feed__post-popup__content-wrapper"><div class="t-feed__post-popup__content t-col t-col_8"><div class="js-feed-comments t-feed__post-popup__comments">' + e.code + "</div></div></div>"), "" != o.popup_opts.showRelevants && (u += '<div class="js-feed-relevants t-feed__post-popup__relevants"></div>'), u += "</div>", void 0 !== o.arrowtop_opts && o.arrowtop_opts.isShow && (u += "" + t_feed_drawPostPopupArrowTop(o)), u += "</div>"
}

function t_feed_addPostPopupHeading(e, t, o) {
	var r = "";
	return r += "" + t_feed_drawPostPopupDateAndParts("beforetitle", e, t, o), r += "" + t_feed_drawPostPopupTitle(e, t), r += "" + t_feed_drawPostPopupDateAndParts("aftertitle", e, t, o)
}

function t_feed_drawPostPopupDateAndParts(e, t, o, r) {
	var a = "",
		s = t.popup_opts.subtitleColor ? 'style="color:' + t.popup_opts.subtitleColor + '"' : "";
	o.postparts.forEach((function (e) {
		a += '<a href="' + e.parturl + '" class="t-feed__post-popup__tag"><span class="t-uptitle t-uptitle_xs" ' + s + ">" + e.parttitle + "</span></a>"
	}));
	var d = "";
	return (t.popup_opts.datePos == e && "" != o.date || t.popup_opts.partsPos == e && o.postparts.length > 0) && (d += '<div class="t-feed__post-popup__date-parts-wrapper t-feed__post-popup__date-parts-wrapper_' + e + '">', t.popup_opts.datePos == e && (d += "" + t_feed_drawPostPopupDate(t, o, r)), t.popup_opts.partsPos == e && o.postparts.length > 0 && (d += a), d += "</div>"), d
}

function t_feed_drawPostPopupCloseIcon(e, t) {
	var o = t.popup_opts.iconColor ? t.popup_opts.iconColor : "#000000",
		r = "";
	return r += '<button type="button" class="js-feed-popup-close t-popup__close" aria-label="' + t_feed_getDictionary("closedialoglabel", e) + '"><div class="t-popup__close-wrapper"><svg role="presentation" class="t-popup__close-icon" width="11" height="20" viewBox="0 0 11 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L10 10L1 19" stroke="' + o + '" stroke-width="2"/></svg></div></button>'
}

function t_feed_drawPopupTitle(e, t) {
	var o = t.popup_opts.closeText ? t.popup_opts.closeText : e.feedtitle,
		r = String(o).replace(/&lt;/g, "<").replace(/&gt;/g, ">").replace(/&quot;/g, '"').replace(/&amp;/g, "&"),
		a = "";
	return t.popup_opts.iconColor && (a = 'style="color:' + t.popup_opts.iconColor + '"'), '<div class="js-feed-popup-close t-feed__post-popup__close-text-wrapper"><div class="js-feed-popup-title t-feed__post-popup__close-text t-descr t-descr_xxs" ' + a + ">" + r + "</div></div>"
}

function t_feed_drawSharing(e) {
	var t = e.popup_opts.shareBg ? 'style="background-color:' + e.popup_opts.shareBg + ';"' : 'style="background-color: #ffffff;"',
		o = e.popup_opts.shareBg ? 'style="border-bottom: 8px solid ' + e.popup_opts.shareBg + ';"' : "",
		r = e.popup_opts.iconColor ? e.popup_opts.iconColor : "rgba(0, 0, 0, 1)",
		a = "";
	return void 0 !== e.popup_opts.isShare && "false" != e.popup_opts.isShare && e.popup_opts.isShare && (a += '<div class="t-feed__share-container"><button type="button" class="js-feed-share-open t-feed__share-icon" aria-expanded="false"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 17.92 15.79" style="fill:' + r + '"><g data-name="Слой 2"><path d="M16 9.67v6H.19v-12h7.18a7.1 7.1 0 00-1.46.89 7 7 0 00-1.08 1.11H2.19v8H14v-1.9z"/><path d="M17.73 5.7L12.16.13V3.8c-1.45.06-7 .73-7.62 7.08a.07.07 0 00.13 0c.49-1.35 2.11-3.43 7.49-3.52v3.88z"/></g></svg></button><div class="t-feed__share ' + e.popup_opts.shareStyle + '" ' + t + '><div class="t-feed__share-arrow" ' + o + '></div><div class="ya-share2" data-access-token:facebook="' + e.popup_opts.shareFBToken + '" data-yashareL10n="en" data-services="' + e.popup_opts.shareServices + '" data-counter=""></div></div></div>'), a
}

function t_feed_drawPostPopupCover(e, t, o, r) {
	var a = o.popup_opts.zoom ? " t-zoomable" : "",
		s = o.popup_opts.zoom ? ' data-zoomable="yes" data-img-zoom-url="' + r.mediadata + '"' : "",
		d = "";
	return "image" == r.mediatype && r.mediadata && (d += '<div id="feed-cover" class="t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + t + '"><img src="' + r.mediadata + '" class="js-feed-post-image t-feed__post-popup__img t-img' + a + '"' + s + "></div>"), "video" == r.mediatype && r.mediadata && (d += '<div class="t-feed__post-popup__cover-wrapper_video t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + t + '">' + t_feed_drawPostPopupVideo(r) + "</div>"), "gallery" == r.mediatype && "" != r.mediadata && JSON.parse(r.mediadata).length > 0 && (d += '<div class="t-feed__post-popup__cover-wrapper t-feed__post-popup__cover-wrapper_' + t + '">' + t_feed_drawPostPopupGallery(e, o, r) + "</div>"), d
}

function t_feed_drawPostPopupVideo(e) {
	var t = "",
		o = "",
		r = e.mediadata; - 1 !== r.indexOf("youtube") || -1 != r.indexOf("youtu.be") ? t = "youtube" : -1 !== r.indexOf("vimeo") ? t = "vimeo" : -1 !== r.indexOf(".mp4") && (t = "html5");
	var a = "";
	return "youtube" === t && ((o = -1 != r.indexOf("youtube") ? r.match(/youtube\.com\/watch\?v=([a-z0-9_-]{11})/i) : r.match(/youtu\.be\/([a-z0-9_-]{11})/i)) && o.length > 1 && (o = o[1]), a += '<iframe src="//youtube.com/embed/' + o + '?rel=0&fmt=18&html5=1&showinfo=0" width="100%" height="100%" frameborder="0" allowfullscreen></iframe>'), "vimeo" === t && ((o = r.match(/vimeo\.com\/([0-9]+)/i)) && o.length > 1 && (o = o[1]), a += '<iframe src="//player.vimeo.com/video/' + o + '?title=0&byline=0&portrait=0&badge=0&color=ffffff" width="100%" height="100%" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>'), "html5" === t && (a += '<video width="100%" height="100%" controls="controls"><source src="' + r + '" type="video/mp4">Your browser does not support the video tag.</video>'), a
}

function t_feed_drawPostPopupGallery(e, t, o) {
	var r = JSON.parse(o.mediadata),
		a = void 0 !== t.gallery ? t.gallery.control : "",
		s = "";
	return s += '<div class="t-slds" style="visibility: hidden;"><div class="t-container t-slds__main"><div class="t-slds__container t-width t-margin_auto"><div class="t-slds__items-wrapper ' + ("dots" !== a ? " t-slds__witharrows" : "") + '" data-slider-transition="" data-slider-with-cycle="true" data-slider-correct-height="true" data-auto-correct-mobile-width="false" aria-roledescription="carousel">', r.forEach((function (o, a) {
		var d = 0 == a ? " t-slds__item_active" : "",
			i = t.popup_opts.zoom ? " t-zoomable" : "",
			n = t.popup_opts.zoom ? ' data-zoomable="yes" data-img-zoom-url="' + o.img + '"' : "";
		if (s += '<div class="t-slds__item' + d + '" data-slide-index="' + (a + 1) + ' role="group" aria-roledescription="slide" aria-label="' + (a + 1) + " " + t_feed_getDictionary("slidecounterlabel", e) + " " + r.length + '"><div class="t-width t-margin_auto"><div class="t-slds__wrapper t-align_center">', void 0 === t.popup_opts.bgSize) s += '<div class="t_feed__post-popup__gallery-imgwrapper"><div class="t-slds__bgimg t-bgimg' + i + '"' + n + ' data-original="' + o.img + '" style="background-image: url(' + t_feed_getLazyUrl(t, o.img) + ');"></div><div class="t-feed__post-popup__slider-separator" data-slider-image-width="860" data-slider-image-height="560"></div></div>';
		else {
			if ("cover" == t.popup_opts.bgSize || "contain" == t.popup_opts.bgSize) {
				var l = "contain" == t.popup_opts.bgSize ? " t-slds__bgimg-contain" : "";
				s += '<div class="t_feed__post-popup__gallery-imgwrapper"><div class="t-slds__bgimg' + l + " t-bgimg" + i + '"' + n + ' data-original="' + o.img + '" style="background-image: url(' + t_feed_getLazyUrl(t, o.img) + ');"></div><div class="t-feed__post-popup__slider-separator" data-slider-image-width="860" data-slider-image-height="560"></div></div>'
			}
			if ("" == t.popup_opts.bgSize) s += "<img " + (1 == a ? 'onload="t_sldsInit(' + e + ')" ' : "") + t_feed_getLazySrc(t, o.img) + ' class="t-slds__img t-img' + i + '"' + n + ">"
		}
		s += "</div></div></div>"
	})), s += "</div>", "dots" !== a && (s += '<div class="t-slds__arrow_container">', 1 != r.length && (s += "" + t_feed_drawSliderArrow(e, t, "left"), s += "" + t_feed_drawSliderArrow(e, t, "right")), s += "</div>"), "dots" !== a && "" !== a || (s += "" + t_feed_drawSliderDots(e, r, t)), s += "</div></div></div>"
}

function t_feed_drawSliderArrow(e, t, o) {
	var r = "",
		a = "",
		s = void 0 !== t.gallery,
		d = "";
	s && (d = t.gallery.arrowColor ? t.gallery.arrowColor : "#222222");
	var i = s ? t.gallery.arrowBg : "",
		n = s ? t.gallery.arrowBgHover : "",
		l = s ? t.gallery.showBorder : "",
		p = s ? t.gallery.arrowSize : "",
		_ = s ? t.gallery.arrowBorderSize : "";
	_ = "" !== _ ? parseInt(t.gallery.arrowBorderSize) : 1;
	var c = "";
	if ("" !== i || "" !== n || "" !== l) switch (p) {
		case "sm":
			r = 6, a = 30;
			break;
		case "lg":
			r = 10, a = 50;
			break;
		case "xl":
			r = 14, a = 60;
			break;
		default:
			r = 8, a = 40;
			break
	} else switch (p) {
		case "sm":
			r = 12;
			break;
		case "lg":
			r = 20;
			break;
		case "xl":
			r = 24;
			break;
		default:
			r = 16;
			break
	}
	var u = "" !== i || "" !== n || "" !== l ? " t-slds__arrow-withbg" : "",
		f = "";
	"" === i && "" === n && "" === l || (f += 'style="', f += "width:" + a + "px;", f += "height:" + a + "px;", "" !== l && (f += "border: " + _ + "px solid " + d + ";"), f += '"');
	var g = "";
	return "left" === o && (g = t_feed_getDictionary("prevarrowlabel", e)), "right" === o && (g = t_feed_getDictionary("nextarrowlabel", e)), c += '<div class="t-slds__arrow_wrapper t-slds__arrow_wrapper-' + o + '" data-slide-direction="' + o + '"><div class="t-slds__arrow t-slds__arrow-' + o + " " + u + '" ' + f + '><button type="button" aria-controls="carousel_' + e + '" aria-disabled="false" aria-label="' + g + '" class="t-slds__arrow_body t-slds__arrow_body-' + o + '" style="width: ' + (r + _) + 'px;"><svg role="presentation" focusable="false" style="display: block" viewBox="0 0 ' + (r + 1.3 * _) + " " + (2 * r + _) + '" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><polyline fill="none" stroke="' + d + '" stroke-linejoin="butt" stroke-linecap="butt" stroke-width="' + _ + '" points="' + _ / 2 + "," + _ / 2 + " " + (r + _ / 2) + "," + (r + _ / 2) + " " + _ / 2 + "," + (2 * r + _ / 2) + '" /></svg></button></div></div>'
}

function t_feed_drawSliderDots(e, t, o) {
	var r = void 0 !== o.gallery,
		a = r ? o.gallery.dotsWidth : "8px";
	(a = parseInt(a)) > 20 && (a = 20);
	var s = r ? o.gallery.dotsActiveBg : "";
	s = "" !== s ? s : "#222222";
	var d = r ? o.gallery.dotsBg : "",
		i = r ? o.gallery.dotsBorderSize : "",
		n = "";
	n += "" === a || isNaN(a) ? "" : "width:" + a + "px;height:" + a + "px;", n += "" !== d ? "background-color:" + d + ";" : "", n += "" !== i ? "border:" + i + " solid " + s + ";" : "";
	var l = "";
	return l += '<ul class="t-slds__bullet_wrapper">', t.forEach((function (t, o) {
		1 != t.length && (l += '<li class="t-slds__bullet' + (0 == o ? " t-slds__bullet_active" : "") + '" data-slide-bullet-for="' + (o + 1) + '"><button type="button" class="t-slds__bullet_body" aria-label="' + t_feed_getDictionary("bulletlabel", e) + " " + (o + 1) + '"  style="' + n + '"></button></li>')
	})), l += "</ul>"
}

function t_feed_setGalleryImageHeight(e) {
	var t = document.querySelector("#rec" + e).querySelectorAll(".t-feed__post-popup__slider-separator");
	Array.prototype.forEach.call(t, (function (e) {
		var t = e.getAttribute("data-slider-image-width"),
			o = 100 * (e.getAttribute("data-slider-image-height") / t);
		e.style.paddingBottom = o + "%"
	}))
}

function t_feed_initCodeHightlight() {
	var e = document.querySelector(".js-feed-post-text");
	if (e) {
		var t = e.querySelectorAll(".t-redactor__highlightcode code");
		t.length && (void 0 !== window.hljs ? t_feed_highlightCodeBlocks(t) : t_feed_loadCodeHighlight((function () {
			t_feed_highlightCodeBlocks(t)
		})))
	}
}

function t_feed_loadCodeHighlight(e) {
	var t = document.createElement("script"),
		o = document.createElement("link");
	o.href = "https://static.tildacdn.com/css/highlight.min.css", t.src = "https://static.tildacdn.com/js/highlight.min.js", o.type = "text/css", o.rel = "stylesheet", e && (t.onload = e), document.head.appendChild(t), document.head.appendChild(o)
}

function t_feed_highlightCodeBlocks(e) {
	Array.prototype.forEach.call(e, (function (e) {
		window.hljs.highlightBlock(e)
	}))
}

function t_feed_PostInit() {
	window.onpopstate = function () {
		window.location.pathname.indexOf("/tpost/") > -1 || location.reload()
	}, t_feed_initCodeHightlight()
}

function t_feed_drawPostPopupDate(e, t, o) {
	var r = e.popup_opts.subtitleColor ? 'style="color:' + e.popup_opts.subtitleColor + '"' : "",
		a = "";
	return (void 0 === e.popup_opts.showDate || e.popup_opts.showDate) && (a += '<span class="t-feed__post-popup__date-wrapper"><span class="js-feed-post-date t-feed__post-popup__date t-uptitle t-uptitle_sm" ' + r + ">" + t_feed_formateDate(t.date, e, o) + "</span></span>"), a
}

function t_feed_drawPostPopupTitle(e, t) {
	var o = e.popup_opts.titleColor ? 'style="color:' + e.popup_opts.titleColor + '"' : "",
		r = "";
	return t.title && (r += '<div class="t-feed__post-popup__title-wrapper"><div class="js-feed-post-title t-feed__post-popup__title t-title t-title_xxs" ' + o + ">" + t.title + "</div></div>"), r
}

function t_feed_drawPostPopupText(e, t) {
	var o = e.popup_opts.textColor ? 'style="color:' + e.popup_opts.textColor + '"' : "",
		r = "";
	t.text ? r = t.text : t.descr && void 0 === t.needGetPost && (r = t.descr);
	var a = "";
	return (r || t.needGetPost) && (a += '<div id="feed-text" class="t-feed__post-popup__text-wrapper" data-animationappear="off"><div class="js-feed-post-text t-feed__post-popup__text t-text t-text_md" ' + o + ">" + r + "</div></div>"), a
}

function t_feed_drawPostPopupAuthor(e, t) {
	var o = t.authorurl ? '<a href="' + t.authorurl + '" class="t-feed__post-popup__author-link" target="_blank">' : "",
		r = t.authorurl ? "</a>" : "",
		a = e.popup_opts.textColor ? 'style="color:' + e.popup_opts.textColor + '"' : "",
		s = "";
	return s += o, s += '<div class="js-feed-post-author t-feed__post-popup__author-wrapper">', t.authorimg && (s += '<div class="js-feed-post-author-image t-feed__post-popup__author-bgimg t-bgimg" data-original="' + t.authorimg + '" style="background-image:url(' + t.authorimg + ')"></div>'), t.authorname && (s += '<span class="js-feed-post-author-name t-feed__post-popup__author-name t-descr t-descr_xxs" ' + a + ">" + t.authorname + "</span>"), s += "</div>", s += r
}

function t_feed_addRelevantsPosts(e, t, o, r) {
	var a = Date.now(),
		s = new XMLHttpRequest;
	s.open("GET", t_feed_createRelevantsURL(t, o, r), !0), s.timeout = 25e3, s.onload = function () {
		if (this.status >= 200 && this.status < 400) {
			if ("" === s.response) return;
			var o = JSON.parse(s.response);
			if ("object" != typeof o) return;
			t_feed_addRelevantsHTML(e, t, o)
		}
	}, s.onerror = function () {
		var e = Date.now() - a;
		0 == s.response.status && e < 100 && 0 !== s.response.readyState && alert("Request error (get posts). Please check internet connection...")
	}, s.send()
}

function t_feed_createRelevantsURL(e, t, o) {
	var r = "random",
		a = "";
	switch (e.popup_opts.methodRelevants) {
		case "random":
			r = "random";
			break;
		case "newest":
			r = "last";
			break;
		case "pop":
			r = "popular";
			break;
		case "unpop":
			r = "unpopular";
			break
	}
	"cc" == e.popup_opts.showRelevants && void 0 !== t.postparts[0] && (a = "&partuid=" + t.postparts[0].partuid);
	var s = e.dateFilter;
	return "all" !== s && (a += "&filters[date][" + s + "]=now"), "https://" + window.t_feeds_endpoint + "/api/getrelevantposts/?postuid=" + o + "&size=4&method=" + r + a
}

function t_feed_addRelevantsHTML(e, t, o) {
	var r = "",
		a = o.relevants;
	if (a.length > 0) {
		r += "" + t_feed_addRelevantsTitle(e, t), r += '<div class="t-feed__post-popup__relevants-wrapper">';
		for (var s = 0; s < a.length; s++) {
			var d = a[s];
			"cols" == t.popup_opts.styleRelevants ? r += "" + t_feed_drawRelevantsPostInCol(t, d) : r += "" + t_feed_drawRelevantsPostInRow(t, d)
		}
		r += "</div>"
	}
	document.querySelector(".js-feed-relevants").insertAdjacentHTML("beforeend", r)
}

function t_feed_addRelevantsTitle(e, t) {
	var o = t.popup_opts.titleColor ? ' style="color:' + t.popup_opts.titleColor + '";' : "";
	return '<div class="t-feed__post-popup__relevants-title-wrapper t-col' + ("cols" == t.popup_opts.styleRelevants ? " t-col_12" : " t-col_8 t-prefix t-prefix_2") + '"><div class="t-feed__post-popup__relevants-title t-align_left t-uptitle t-uptitle_xxl"' + o + ">" + (t.popup_opts.titleRelevants ? t.popup_opts.titleRelevants : t_feed_getDictionary("seealso", e)) + "</div></div>"
}

function t_feed_drawRelevantsPostInRow(e, t) {
	return '<div class="t-feed__post-popup__relevants-item-wrapper"><div class="t-feed__post-popup__relevants-item t-feed__post-popup__relevants-item_row t-col t-col_8 t-prefix t-prefix_2 t-align_left"><a class="" href="' + t.url + '"><div class="t-feed__post-popup__relevants-content">' + t_feed_drawRelevantsPostContent(e, t) + "</div></a></div></div>"
}

function t_feed_drawRelevantsPostInCol(e, t) {
	return '<div class="t-feed__post-popup__relevants-item t-col t-col_3 t-align_left"><a class="" href="' + t.url + '">' + t_feed_drawRelevantsPostContent(e, t) + "</a></div>"
}

function t_feed_drawRelevantsPostContent(e, t) {
	var o, r;
	if ("cols" == e.popup_opts.styleRelevants) r = 'style="padding-bottom:' + (o = e.imageRatio ? e.imageRatio + "%" : "66%") + ';"';
	else {
		o = e.imageRatio ? e.imageRatio / 100 : "0.75";
		var a = "100px";
		window.innerWidth <= 560 && (a = "60px"), r = 'style="height: calc(' + a + " * " + o + ');"'
	}
	var s = e.popup_opts.titleColor ? ' style="color:' + e.popup_opts.titleColor + '";' : "",
		d = e.popup_opts.textColor ? ' style="color:' + e.popup_opts.textColor + '";' : "",
		i = e.popup_opts.subtitleColor ? ' style="color:' + e.popup_opts.subtitleColor + '";' : "",
		n = "";
	t.thumb ? n = t.thumb : t.image && (n = t.image);
	var l = "";
	return n && (l += '<div class="t-feed__post-popup__relevants-imgwrapper" ' + r + '><div class="t-feed__post-popup__relevants-bgimg t-bgimg" data-original="' + n + '" style="background-image: url(' + n + ');"></div></div>'), l += '<div class="t-feed__post-popup__relevants-textwrapper"><div class="t-feed__post-popup__relevants-parts" style="">', t.postparts.forEach((function (e) {
		"" != e && (l += '<span class="t-feed__post-popup__relevants-item-tag t-uptitle t-uptitle_xs"' + i + ">" + e.parttitle + "</span>")
	})), l += "</div>", t.title && (l += '<div class="t-feed__post-popup__relevants-item-title t-name t-name_xs"' + s + ">" + t.title + "</div>"), t.descr && (l += '<div class="t-feed__post-popup__relevants-item-descr t-descr t-descr_xxs"' + d + ">" + t.descr + "</div>"), l += "</div>"
}

function t_feed_drawPostPopupArrowTop(e) {
	var t = e.arrowtop_opts.color ? 'style="fill: ' + e.arrowtop_opts.color + ';"' : "",
		o = e.arrowtop_opts.bottom ? e.arrowtop_opts.bottom : "20px",
		r = "left:20px;";
	e.arrowtop_opts.left && (r = "left:" + e.arrowtop_opts.left + ";"), e.arrowtop_opts.right && (r = "right:" + e.arrowtop_opts.right + ";");
	var a = "";
	switch (a += '<div class="t-feed__post-popup__arrow-top" ' + ('style="position:fixed;z-index:1;bottom:' + o + ";" + r + 'min-height:30px;"') + ">", +e.arrowtop_opts.style) {
		case 2:
			a += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48"><path ' + t + ' d="M24 3.125c11.511 0 20.875 9.364 20.875 20.875S35.511 44.875 24 44.875 3.125 35.511 3.125 24 12.489 3.125 24 3.125m0-3C10.814.125.125 10.814.125 24S10.814 47.875 24 47.875 47.875 37.186 47.875 24 37.186.125 24 .125z"/><path ' + t + ' d="M25.5 36.033a1.5 1.5 0 11-3 0V16.87l-7.028 7.061a1.497 1.497 0 01-2.121.005 1.5 1.5 0 01-.005-2.121l9.591-9.637A1.498 1.498 0 0124 11.736h.001c.399 0 .783.16 1.063.443l9.562 9.637a1.5 1.5 0 01-2.129 2.114l-6.994-7.049-.003 19.152z"/></svg>';
			break;
		case 3:
			a += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48"><path ' + t + ' d="M43.006 47.529H4.964a4.805 4.805 0 01-4.791-4.791V4.697A4.805 4.805 0 014.964-.094h38.042a4.805 4.805 0 014.791 4.791v38.042a4.805 4.805 0 01-4.791 4.79zM25.503 16.881l6.994 7.049a1.5 1.5 0 102.129-2.114l-9.562-9.637a1.5 1.5 0 00-1.063-.443H24c-.399 0-.782.159-1.063.442l-9.591 9.637a1.5 1.5 0 102.126 2.116L22.5 16.87v19.163a1.5 1.5 0 103 0l.003-19.152z"/></svg>';
			break;
		case 1:
		default:
			a += '<svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" viewBox="0 0 48 48"><path ' + t + ' d="M47.875 24c0 13.186-10.689 23.875-23.875 23.875S.125 37.186.125 24 10.814.125 24 .125 47.875 10.814 47.875 24zm-22.372-7.119l6.994 7.049a1.5 1.5 0 102.129-2.114l-9.562-9.637a1.5 1.5 0 00-1.063-.443H24c-.399 0-.782.159-1.063.442l-9.591 9.637a1.5 1.5 0 102.126 2.116L22.5 16.87v19.163a1.5 1.5 0 103 0l.003-19.152z"/></svg>';
			break
	}
	return a += "</div>"
}

function t_feed_drawEmptyMessage(e, t) {
	return '<div class="js-feed-error-msg t-feed__error-msg-cont t-col t-col_12"><div class="t-feed__error-msg-wrapper t-descr t-descr_sm" style="' + (e.typo && e.typo.titleColor ? "color:" + e.typo.titleColor + ";border-color:" + e.typo.titleColor + ";" : "") + '"><div class="t-feed__error-msg">' + t_feed_getDictionary("emptypartmsg", t) + "</div></div></div>"
}

function t_feed_drawErrorBox(e, t) {
	return '<div class="js-feed-error-msg t-feed__error-msg-cont t-col t-col_12"><div class="t-feed__error-msg-wrapper t-descr t-descr_sm" style="' + (e.typo && e.typo.titleColor ? "color:" + e.typo.titleColor + ";border-color:" + e.typo.titleColor + ";" : "") + '"><div class="t-feed__error-msg">' + t + "</div></div></div>"
}

function t_feed_formateDate(e, t, o) {
	var r = e.split(" ")[0],
		a = e.split(" ")[1],
		s = r.split("-"),
		d = new Date(s[0], s[1] - 1, s[2]),
		i = 1 == +t.timeFormat ? " " + a : "",
		n = d.getMonth(),
		l = s[2],
		p = s[1],
		_ = s[0],
		c = t_feed_getDictionary(["january", "february", "march", "april", "may", "june", "july", "august", "september", "october", "november", "december"][n], o);
	switch (+t.dateFormat) {
		case 1:
			return p + "-" + l + "-" + _ + i;
		case 2:
			return l + "-" + p + "-" + _ + i;
		case 3:
			return l + "/" + p + "/" + _ + i;
		case 4:
			return l + "." + p + "." + _ + i;
		case 5:
			return c[0] + " " + l + ", " + _ + i;
		case 6:
			return l + ("DE" === t_feed_returnLang() ? ". " : " ") + c[1] + " " + _ + i;
		default:
			return t_feed_addDefaultDate(o, s, e, c, i)
	}
}

function t_feed_addDefaultDate(e, t, o, r, a) {
	var s = t_feed_returnLang(e),
		d = new Date,
		i = d - Date.parse(o),
		n = Math.floor(i / 864e5),
		l = t_feed_getDictionary("ago", e),
		p = ("RU" == s || "UK" == s) && n > 4 ? t_feed_getDictionary("days", e)[1] : t_feed_getDictionary("days", e)[0],
		_ = d.getFullYear(),
		c = +o.split("-")[0],
		u = "JA" == s || "ZH" == s ? "" : " ",
		f = c != _ ? c : "",
		g = "";
	return 0 == n && (g = t_feed_getDictionary("today", e)), 1 == n && (g = t_feed_getDictionary("yesterday", e)), n > 1 && n < 15 && (g = "FR" == s || "DE" == s || "ES" == s || "PT" == s ? l + u + n + u + p : n + u + p + u + l), (n >= 15 || c > _) && (g = t_feed_addFullDate(s, t[2], r, f) + a), g
}

function t_feed_addFullDate(e, t, o, r) {
	var a = "DE" == e ? ". " : " ",
		s = " ";
	"EN" == e ? s = "" != r ? ", " : "" : "ES" != e && "PT" != e || (s = "" != r ? " de " : "");
	var d = o[1];
	return "EN" != e && "DE" != e || (d = o[0]), "EN" == e ? d + " " + t + s + r : "JA" == e || "ZH" == e ? r + d + t : t + a + d + s + r
}

function t_feed_getDictionary(e, t) {
	var o = [];
	o.emptypartmsg = {
		EN: "Nothing found",
		RU: "Ничего не найдено",
		FR: "Rien trouvé",
		DE: "Nichts gefunden",
		ES: "Nada encontrado",
		PT: "Nada encontrado",
		UK: "Нічого не знайдено",
		JA: "何も見つかりませんでした",
		ZH: "什么都没找到",
		PL: "Nic nie znaleziono",
		KK: "Ештеңе табылмады",
		IT: "Non abbiamo trovato nulla",
		LV: "Nekas nav atrasts"
	}, o.all = {
		EN: "All",
		RU: "Все",
		FR: "Tous",
		DE: "Alles",
		ES: "Todos",
		PT: "Todos",
		UK: "Всі",
		JA: "すべて",
		ZH: "所有",
		PL: "Wszystko",
		KK: "Барлық",
		IT: "Tutte",
		LV: "Visi"
	}, o.feedsections = {
		EN: "Feed sections",
		RU: "Разделы потока",
		FR: "Feed sections",
		DE: "Feed sections",
		ES: "Feed sections",
		PT: "Feed sections",
		UK: "Feed sections",
		JA: "Feed sections",
		ZH: "Feed sections",
		PL: "Feed sections",
		KK: "Feed sections",
		IT: "Feed sections",
		LV: "Feed sections"
	}, o.seealso = {
		EN: "See also",
		RU: "Смотрите также",
		FR: "Voir également",
		DE: "Siehe auch",
		ES: "Ver también",
		PT: "Veja também",
		UK: "Дивись також",
		JA: "また見なさい",
		ZH: "也可以看看",
		PL: "Patrz również",
		KK: "Сондай-ақ, қараңыз",
		IT: "Guarda anche",
		LV: "Skatīt arī"
	}, o.today = {
		EN: "Today",
		RU: "Сегодня",
		FR: "Aujourd'hui",
		DE: "Heute",
		ES: "Hoy",
		PT: "Hoje",
		UK: "Сьогодні",
		JA: "今日",
		ZH: "今天",
		PL: "Dzisiaj",
		KK: "Бүгін",
		IT: "Oggi",
		LV: "Šodien"
	}, o.yesterday = {
		EN: "Yesterday",
		RU: "Вчера",
		FR: "Hier",
		DE: "Gestern",
		ES: "Ayer",
		PT: "Ontem",
		UK: "Вчора",
		JA: "昨日",
		ZH: "昨天",
		PL: "Wczoraj",
		KK: "Кеше",
		IT: "Ieri",
		LV: "Vakar"
	}, o.days = {
		EN: ["days"],
		RU: ["дня", "дней"],
		FR: ["jours"],
		DE: ["tagen"],
		ES: ["dias"],
		PT: ["dias"],
		UK: ["дні", "днів"],
		JA: ["日"],
		ZH: ["天"],
		PL: ["dni"],
		KK: ["күн"],
		IT: ["giorni"],
		LV: ["dienas"]
	}, o.ago = {
		EN: "ago",
		RU: "назад",
		FR: "Il y a",
		DE: "Vor",
		ES: "Hace",
		PT: "Há",
		UK: "тому",
		JA: "前",
		ZH: "前",
		PL: "powrót",
		KK: "бұрын",
		IT: "fa",
		LV: "pirms"
	}, o.january = {
		EN: ["January", "january"],
		RU: ["Январь", "января"],
		FR: ["Janvier", "janvier"],
		DE: ["Januar", "Januar"],
		ES: ["Enero", "de enero"],
		PT: ["Janeiro", "de janeiro"],
		UK: ["Січень", "січня"],
		JA: ["一月", "一月"],
		ZH: ["一月", "一月"],
		PL: ["Styczeń", "styczenia"],
		KK: ["Қаңтар"],
		IT: ["Gennaio"],
		LV: ["Janvāris"]
	}, o.february = {
		EN: ["February", "february"],
		RU: ["Февраль", "февраля"],
		FR: ["Février", "février"],
		DE: ["Februar", "Februar"],
		ES: ["Febrero", "de febrero"],
		PT: ["Fevereiro", "de fevereiro"],
		UK: ["Лютий", "лютого"],
		JA: ["二月", "二月"],
		ZH: ["二月", "二月"],
		PL: ["Luty", "lutego"],
		KK: ["Ақпан"],
		IT: ["Febbraio"],
		LV: ["Februāris"]
	}, o.march = {
		EN: ["March", "March"],
		RU: ["Март", "марта"],
		FR: ["Mars", "mars"],
		DE: ["März", "März"],
		ES: ["Marzo", "de marzo"],
		PT: ["Março", "de março"],
		UK: ["Березень", "березня"],
		JA: ["三月", "三月"],
		ZH: ["三月", "三月"],
		PL: ["Marzec", "marca"],
		KK: ["Наурыз"],
		IT: ["Marzo"],
		LV: ["Marts"]
	}, o.april = {
		EN: ["April", "april"],
		RU: ["Апрель", "апреля"],
		FR: ["Avril", "avril"],
		DE: ["April", "April"],
		ES: ["Abril", "de abril"],
		PT: ["Abril", "de abril"],
		UK: ["Квітень", "квітня"],
		JA: ["四月", "四月"],
		ZH: ["四月", "四月"],
		PL: ["Kwiecień", "kwietnia"],
		KK: ["Сәуір"],
		IT: ["Aprile"],
		LV: ["Aprīlis"]
	}, o.may = {
		EN: ["May", "may"],
		RU: ["Май", "мая"],
		FR: ["Mai", "mai"],
		DE: ["Mai", "Mai"],
		ES: ["Mayo", "de mayo"],
		PT: ["Maio", "de maio"],
		UK: ["Травень", "травня"],
		JA: ["五月", "五月"],
		ZH: ["五月", "五月"],
		PL: ["Maj", "maja"],
		KK: ["Мамыр"],
		IT: ["Maggio"],
		LV: ["Maijs"]
	}, o.june = {
		EN: ["June", "june"],
		RU: ["Июнь", "июня"],
		FR: ["Juin", "juin"],
		DE: ["Juni", "Juni"],
		ES: ["Junio", "de junio"],
		PT: ["Junho", "de junho"],
		UK: ["Червень", "червня"],
		JA: ["六月", "六月"],
		ZH: ["六月", "六月"],
		PL: ["Czerwiec", "czerwca"],
		KK: ["Маусым"],
		IT: ["Giugno"],
		LV: ["Jūnijs"]
	}, o.july = {
		EN: ["July", "july"],
		RU: ["Июль", "июля"],
		FR: ["Juillet", "juillet"],
		DE: ["Juli", "Juli"],
		ES: ["Julio", "de julio"],
		PT: ["Julho", "de julho"],
		UK: ["Липень", "липня"],
		JA: ["七月", "七月"],
		ZH: ["七月", "七月"],
		PL: ["Lipiec", "lipca"],
		KK: ["Шілде"],
		IT: ["Luglio"],
		LV: ["Jūlijs"]
	}, o.august = {
		EN: ["August", "august"],
		RU: ["Август", "августа"],
		FR: ["Août", "août"],
		DE: ["August", "August"],
		ES: ["Agosto", "de agosto"],
		PT: ["Agosto", "de agosto"],
		UK: ["Серпень", "серпня"],
		JA: ["八月", "八月"],
		ZH: ["八月", "八月"],
		PL: ["Sierpień", "sierpnia"],
		KK: ["Тамыз"],
		IT: ["Agosto"],
		LV: ["Augusts"]
	}, o.september = {
		EN: ["September", "september"],
		RU: ["Сентябрь", "сентября"],
		FR: ["Septembre", "septembre"],
		DE: ["September", "September"],
		ES: ["Septiembre", "de septiembre"],
		PT: ["Setembro", "de setembro"],
		UK: ["Вересень", "вересня"],
		JA: ["九月", "九月"],
		ZH: ["九月", "九月"],
		PL: ["Wrzesień", "września"],
		KK: ["Қыркүйек"],
		IT: ["Settembre"],
		LV: ["Septembris"]
	}, o.october = {
		EN: ["October", "october"],
		RU: ["Октябрь", "октября"],
		FR: ["Octobre", "octobre"],
		DE: ["Oktober", "Oktober"],
		ES: ["Octubre", "de octubre"],
		PT: ["Outubro", "de outubro"],
		UK: ["Жовтень", "жовтня"],
		JA: ["十月", "十月"],
		ZH: ["十月", "十月"],
		PL: ["Październik", "października"],
		KK: ["Қазан"],
		IT: ["Ottobre"],
		LV: ["Oktobris"]
	}, o.november = {
		EN: ["November", "november"],
		RU: ["Ноябрь", "ноября"],
		FR: ["Novembre", "novembre"],
		DE: ["November", "November"],
		ES: ["Noviembre", "de noviembre"],
		PT: ["Novembro", "de novembro"],
		UK: ["Листопад", "листопада"],
		JA: ["十一月", "十一月"],
		ZH: ["十一月", "十一月"],
		PL: ["Listopad", "listopada"],
		KK: ["Қараша"],
		IT: ["Novembre"],
		LV: ["Novembris"]
	}, o.december = {
		EN: ["December", "december"],
		RU: ["Декабрь", "декабря"],
		FR: ["Décembre", "décembre"],
		DE: ["Dezember", "Dezember"],
		ES: ["Diciembre", "de diciembre"],
		PT: ["Dezembro", "de dezembro"],
		UK: ["Грудень", "грудня"],
		JA: ["十二月", "十二月"],
		ZH: ["十二月", "十二月"],
		PL: ["Grudzień", "grudnia"],
		KK: ["Желтоқсан"],
		IT: ["Dicembre"],
		LV: ["Decembris"]
	}, o.prevarrowlabel = {
		EN: "Previous slide",
		RU: "Предыдущий слайд",
		FR: "Previous slide",
		DE: "Previous slide",
		ES: "Previous slide",
		PT: "Previous slide",
		UK: "Previous slide",
		JA: "Previous slide",
		ZH: "Previous slide",
		PL: "Previous slide",
		KK: "Previous slide",
		IT: "Previous slide",
		LV: "Previous slide"
	}, o.nextarrowlabel = {
		EN: "Next slide",
		RU: "Следующий слайд",
		FR: "Next slide",
		DE: "Next slide",
		ES: "Next slide",
		PT: "Next slide",
		UK: "Next slide",
		JA: "Next slide",
		ZH: "Next slide",
		PL: "Next slide",
		KK: "Next slide",
		IT: "Next slide",
		LV: "Next slide"
	}, o.bulletlabel = {
		EN: "Go to slide",
		RU: "Перейти к слайду",
		FR: "Go to slide",
		DE: "Go to slide",
		ES: "Go to slide",
		PT: "Go to slide",
		UK: "Go to slide",
		JA: "Go to slide",
		ZH: "Go to slide",
		PL: "Go to slide",
		KK: "Go to slide",
		IT: "Go to slide",
		LV: "Go to slide"
	}, o.closedialoglabel = {
		EN: "Close post",
		RU: "Закрыть пост",
		FR: "Close post",
		DE: "Close post",
		ES: "Close post",
		PT: "Close post",
		UK: "Close post",
		JA: "Close post",
		ZH: "Close post",
		PL: "Close post",
		KK: "Close post",
		IT: "Close post",
		LV: "Close post"
	}, o.slidecounterlabel = {
		EN: "of",
		RU: "из",
		FR: "of",
		DE: "of",
		ES: "of",
		PT: "of",
		UK: "of",
		JA: "of",
		ZH: "of",
		PL: "of",
		KK: "of",
		IT: "of",
		LV: "of"
	};
	var r = t_feed_returnLang(t);
	return void 0 !== o[e] ? void 0 !== o[e][r] && "" != o[e][r] ? o[e][r] : o[e].EN : 'Text not found "' + e + '"'
}

function t_feed_returnLang(e) {
	var t = "EN";
	if (void 0 !== window.tFeedPosts[e] && void 0 !== window.tFeedPosts[e].lang && "" != window.tFeedPosts[e].lang) t = window.tFeedPosts[e].lang.toUpperCase();
	else {
		t = (window.navigator.userLanguage || window.navigator.language).toUpperCase().slice(0, 2);
		var o = document.getElementById("allrecords");
		if (o) {
			var r = o.getAttribute("data-tilda-project-lang");
			r && (t = r)
		}
	}
	return t
}

function t_feed__moveClickOnPost(e) {
	var t = document.getElementById("rec" + e);
	if (t) {
		var o = t.querySelectorAll(".t-feed__post");
		o && Array.prototype.forEach.call(o, (function (e) {
			var t, o, r = e.querySelector(".t-feed__link");
			r && (e.style.cursor = "pointer", e.addEventListener("mousedown", (function () {
				t = Date.now()
			})), e.addEventListener("mouseup", (function (e) {
				o = Date.now();
				var a = document.querySelector(".t-feed__post-popup");
				null !== a && a.parentNode.removeChild(a), !e.target.closest(".t-feed__link") && 1 === e.which && o - t < 200 && r.click()
			})))
		}))
	}
}

function t_feed__addFocusOnTab(e) {
	if (!window.isMobile && document.getElementById("rec" + e)) {
		var t = document.querySelectorAll(".t-feed__link");
		if (t) {
			var o = null;
			document.addEventListener("keydown", (function () {
				o = "keyboard"
			})), document.addEventListener("mousedown", (function () {
				o = "mouse"
			})), Array.prototype.forEach.call(t, (function (e) {
				var t = e.closest(".t-feed__post");
				e.addEventListener("focus", (function () {
					"keyboard" === o && (t && t.classList.add("t-focusable"), o = null)
				})), e.addEventListener("blur", (function () {
					t && t.classList.remove("t-focusable")
				}))
			}))
		}
	}
}

function t_feed_onFuncLoad(e, t, o) {
	"function" == typeof window[e] ? t() : setTimeout((function r() {
		if ("function" != typeof window[e]) {
			if ("complete" === document.readyState && "function" != typeof window[e]) throw new Error(e + " is undefined");
			setTimeout(r, o || 100)
		} else t()
	}))
}

function t_feed__trapFocus(e) {
	var t = e.querySelectorAll('a, button, input:not([type="hidden"]), select, textarea, video, iframe'),
		o = t[0],
		r = t[t.length - 1];
	document.addEventListener("keydown", (function (e) {
		("Tab" === e.key || 9 === e.keyCode) && (e.shiftKey ? document.activeElement === o && (r.focus(), e.preventDefault()) : document.activeElement === r && (o.focus(), e.preventDefault()))
	}))
}
Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.msMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.oMatchesSelector), Element.prototype.closest || (Element.prototype.closest = function (e) {
	for (var t = this; t && 1 === t.nodeType;) {
		if (Element.prototype.matches.call(t, e)) return t;
		t = t.parentElement || t.parentNode
	}
	return null
});
